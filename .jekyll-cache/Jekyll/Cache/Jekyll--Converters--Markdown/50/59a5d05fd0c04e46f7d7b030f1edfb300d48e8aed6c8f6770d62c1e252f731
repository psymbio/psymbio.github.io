I"Œ<h2 id="questions">Questions</h2>

<div class="admonition note"><p class="admonition-title">1. How is a grayscale image represented on a computer? How about a color image?</p><p></p></div>
<div class="admonition note"><p class="admonition-title">2. How are the files and folders in the MNIST_SAMPLE dataset structured? Why?</p><p></p></div>
<div class="admonition note"><p class="admonition-title">3. Explain how the "pixel similarity" approach to classifying digits works.</p><p></p></div>
<div class="admonition note"><p class="admonition-title">4. What is a list comprehension? Create one now that selects odd numbers from a list and doubles them.</p><p></p></div>
<div class="admonition note"><p class="admonition-title">5. What is a "rank-3 tensor"?</p><p></p></div>
<div class="admonition note"><p class="admonition-title">6. What is the difference between tensor rank and shape? How do you get the rank from the shape?</p><p></p></div>
<div class="admonition note"><p class="admonition-title">7. What are RMSE and L1 norm?</p><p></p></div>
<div class="admonition note"><p class="admonition-title">8. How can you apply a calculation on thousands of numbers at once, many thousands of times faster than a Python loop?</p><p></p></div>
<div class="admonition note"><p class="admonition-title">9. Create a 3Ã—3 tensor or array containing the numbers from 1 to 9. Double it. Select the bottom-right four numbers.</p><p></p></div>
<div class="admonition note"><p class="admonition-title">10. What is broadcasting?</p><p></p></div>
<div class="admonition note"><p class="admonition-title">11. Are metrics generally calculated using the training set, or the validation set? Why?</p><p></p></div>
<div class="admonition note"><p class="admonition-title">12. What is SGD?</p><p></p></div>
<div class="admonition note"><p class="admonition-title">13. Why does SGD use mini-batches?</p><p></p></div>
<div class="admonition note"><p class="admonition-title">14. What are the seven steps in SGD for machine learning?</p><p></p></div>
<div class="admonition note"><p class="admonition-title">15. How do we initialize the weights in a model?</p><p></p></div>
<div class="admonition note"><p class="admonition-title">16. What is "loss"?</p><p></p></div>
<div class="admonition note"><p class="admonition-title">17. Why can't we always use a high learning rate?</p><p></p></div>
<div class="admonition note"><p class="admonition-title">18. What is a "gradient"?</p><p></p></div>
<div class="admonition note"><p class="admonition-title">19. Do you need to know how to calculate gradients yourself?</p><p></p></div>
<div class="admonition note"><p class="admonition-title">20. Why can't we use accuracy as a loss function?</p><p></p></div>
<div class="admonition note"><p class="admonition-title">21. Draw the sigmoid function. What is special about its shape?</p><p></p></div>
<div class="admonition note"><p class="admonition-title">22. What is the difference between a loss function and a metric?</p><p></p></div>
<div class="admonition note"><p class="admonition-title">23. What is the function to calculate new weights using a learning rate?</p><p></p></div>
<div class="admonition note"><p class="admonition-title">24. What does the DataLoader class do?</p><p></p></div>
<div class="admonition note"><p class="admonition-title">25. Write pseudocode showing the basic steps taken in each epoch for SGD.</p><p></p></div>
<div class="admonition note"><p class="admonition-title">26. Create a function that, if passed two arguments [1,2,3,4] and 'abcd', returns [(1, 'a'), (2, 'b'), (3, 'c'), (4, 'd')]. What is special about that output data structure?</p><p></p></div>
<div class="admonition note"><p class="admonition-title">27. What does view do in PyTorch?</p><p></p></div>
<div class="admonition note"><p class="admonition-title">28. What are the "bias" parameters in a neural network? Why do we need them?</p><p></p></div>
<div class="admonition note"><p class="admonition-title">29. What does the @ operator do in Python?</p><p></p></div>
<div class="admonition note"><p class="admonition-title">30. What does the backward method do?</p><p></p></div>
<div class="admonition note"><p class="admonition-title">31. Why do we have to zero the gradients?</p><p></p></div>
<div class="admonition note"><p class="admonition-title">32. What information do we have to pass to Learner?</p><p></p></div>
<div class="admonition note"><p class="admonition-title">33. Show Python or pseudocode for the basic steps of a training loop.</p><p></p></div>
<div class="admonition note"><p class="admonition-title">34. What is "ReLU"? Draw a plot of it for values from -2 to +2.</p><p></p></div>
<div class="admonition note"><p class="admonition-title">35. What is an "activation function"?</p><p></p></div>
<div class="admonition note"><p class="admonition-title">36. What's the difference between F.relu and nn.ReLU?</p><p></p></div>
<div class="admonition note"><p class="admonition-title">37. The universal approximation theorem shows that any function can be approximated as closely as needed using just one nonlinearity. So why do we normally use more?</p><p></p></div>

<h2 id="further-research">Further Research</h2>

<div class="admonition hint"><p class="admonition-title">1. Create your own implementation of Learner from scratch, based on the training loop shown in this chapter.</p><p></p></div>
<div class="admonition hint"><p class="admonition-title">2. Complete all the steps in this chapter using the full MNIST datasets (that is, for all digits, not just 3s and 7s). This is a significant project and will take you quite a bit of time to complete! You'll need to do some of your own research to figure out how to overcome some obstacles you'll meet on the way.</p><p></p></div>
:ET